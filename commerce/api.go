// Code generated by "gen"; DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package commerce

import (
	"context"

	"github.com/clerk/clerk-sdk-go/v2"
)

// --- Subscriptions ---
func CreateSubscription(ctx context.Context, params *clerk.CreateSubscriptionParams) (*clerk.CommerceSubscription, error) {
	return getClient().CreateSubscription(ctx, params)
}

func ListSubscriptionsByInstanceID(ctx context.Context, params *clerk.ListSubscriptionsByInstanceIDParams) (*clerk.ListCommerceSubscriptionsResponse, error) {
	return getClient().ListSubscriptionsByInstanceID(ctx, params)
}

func ListSubscriptionsByUserID(ctx context.Context, params *clerk.ListSubscriptionsByUserIDParams) (*clerk.ListCommerceSubscriptionsResponse, error) {
	return getClient().ListSubscriptionsByUserID(ctx, params)
}

func GetSubscriptionByID(ctx context.Context, params *clerk.GetSubscriptionByIDParams) (*clerk.CommerceSubscription, error) {
	return getClient().GetSubscriptionByID(ctx, params)
}

func UpdateSubscription(ctx context.Context, params *clerk.UpdateSubscriptionParams) (*clerk.CommerceSubscription, error) {
	return getClient().UpdateSubscription(ctx, params)
}

// --- Invoices ---
func CreateInvoice(ctx context.Context, params *clerk.CreateInvoiceParams) (*clerk.CommerceInvoice, error) {
	return getClient().CreateInvoice(ctx, params)
}

// --- Common Fake Data Helpers ---
func ListInvoicesByInstanceID(ctx context.Context, params *clerk.ListInvoicesByInstanceIDParams) (*clerk.ListCommerceInvoicesResponse, error) {
	return getClient().ListInvoicesByInstanceID(ctx, params)
}

func GetInvoiceByID(ctx context.Context, params *clerk.GetInvoiceByIDParams) (*clerk.CommerceInvoice, error) {
	return getClient().GetInvoiceByID(ctx, params)
}

func UpdateInvoice(ctx context.Context, params *clerk.UpdateInvoiceParams) (*clerk.CommerceInvoice, error) {
	return getClient().UpdateInvoice(ctx, params)
}

// --- Payment Attempts ---
func CreatePaymentAttempt(ctx context.Context, params *clerk.CreatePaymentAttemptParams) (*clerk.CommercePaymentAttempt, error) {
	return getClient().CreatePaymentAttempt(ctx, params)
}

func ListPaymentAttemptsByInstanceID(ctx context.Context, params *clerk.ListPaymentAttemptsByInstanceIDParams) (*clerk.ListCommercePaymentAttemptsResponse, error) {
	return getClient().ListPaymentAttemptsByInstanceID(ctx, params)
}

func GetPaymentAttemptByID(ctx context.Context, params *clerk.GetPaymentAttemptByIDParams) (*clerk.CommercePaymentAttempt, error) {
	return getClient().GetPaymentAttemptByID(ctx, params)
}

func UpdatePaymentAttempt(ctx context.Context, params *clerk.UpdatePaymentAttemptParams) (*clerk.CommercePaymentAttempt, error) {
	return getClient().UpdatePaymentAttempt(ctx, params)
}

// --- Products ---
func CreateProduct(ctx context.Context, params *clerk.CreateProductParams) (*clerk.CommerceProduct, error) {
	return getClient().CreateProduct(ctx, params)
}

func ListProductsByInstanceID(ctx context.Context, params *clerk.ListProductsByInstanceIDParams) (*clerk.ListCommerceProductsResponse, error) {
	return getClient().ListProductsByInstanceID(ctx, params)
}

func GetProductByID(ctx context.Context, params *clerk.GetProductByIDParams) (*clerk.CommerceProduct, error) {
	return getClient().GetProductByID(ctx, params)
}

func UpdateProduct(ctx context.Context, params *clerk.UpdateProductParams) (*clerk.CommerceProduct, error) {
	return getClient().UpdateProduct(ctx, params)
}

// --- Plans ---
func CreatePlan(ctx context.Context, params *clerk.CreatePlanParams) (*clerk.CommercePlan, error) {
	return getClient().CreatePlan(ctx, params)
}

func ListPlansByInstanceID(ctx context.Context, params *clerk.ListPlansByInstanceIDParams) (*clerk.ListCommerceProductsResponse, error) {
	return getClient().ListPlansByInstanceID(ctx, params)
}

func GetPlanByID(ctx context.Context, params *clerk.GetPlanByIDParams) (*clerk.CommercePlan, error) {
	return getClient().GetPlanByID(ctx, params)
}

func UpdatePlan(ctx context.Context, params *clerk.UpdatePlanParams) (*clerk.CommercePlan, error) {
	return getClient().UpdatePlan(ctx, params)
}

// --- Integrations ---
func CreateIntegration(ctx context.Context, params *clerk.CreateIntegrationParams) (*clerk.CommerceIntegrationResponse, error) {
	return getClient().CreateIntegration(ctx, params)
}

func ListIntegrationsByInstanceID(ctx context.Context, params *clerk.ListIntegrationsByInstanceIDParams) (*clerk.ListCommerceIntegrationsResponse, error) {
	return getClient().ListIntegrationsByInstanceID(ctx, params)
}

func GetIntegration(ctx context.Context, params *clerk.GetIntegrationParams) (*clerk.CommerceIntegrationResponse, error) {
	return getClient().GetIntegration(ctx, params)
}

func UpdateIntegration(ctx context.Context, params *clerk.UpdateIntegrationParams) (*clerk.CommerceIntegrationResponse, error) {
	return getClient().UpdateIntegration(ctx, params)
}

func getClient() *Client {
	return &Client{
		Backend: clerk.GetBackend(),
	}
}
